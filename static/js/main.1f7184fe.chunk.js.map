{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","assets/images/logo.svg","components/Header/styles.ts","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","value","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","addProduct","productId","a","updatedCart","get","then","response","data","product","productExists","find","id","currentAmount","amount","stockAmount","toast","error","newProduct","push","setItem","stringify","updateProductAmount","map","Provider","removeProduct","productIndex","findIndex","Error","splice","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","useEffect","loadProducts","src","image","alt","title","price","type","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","cartFormatted","priceFormatted","subTotal","total","acc","currProduct","disabled","decrement","handleProductDecrement","readOnly","console","log","increment","handleProductIncrement","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f7184fe.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n\n      display: flex;\n      align-items: center;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n","export const formatPrice = (value: number) => new Intl.NumberFormat('pt-br', {\n  style: 'currency',\n  currency: 'BRL',\n}).format(value);\n","import { createContext, ReactNode, useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { Product } from '../types';\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\ninterface UpdateProductAmount {\n  productId: number;\n  amount: number;\n}\n\ninterface CartContextData {\n  cart: Product[];\n  addProduct: (productId: number) => Promise<void>;\n  removeProduct: (productId: number) => void;\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\n}\n\nconst CartContext = createContext<CartContextData>({} as CartContextData);\n\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\n  const [cart, setCart] = useState<Product[]>(() => {\n  const storagedCart = localStorage.getItem('@RocketShoes:cart');\n\n    if (storagedCart) {\n      return JSON.parse(storagedCart);\n    }\n\n    return [];\n  });\n\n  const addProduct = async (productId: number) => {\n    try {\n     const updatedCart = [...cart];\n     const product = await api.get(`products/${productId}`)\n     .then(response => response.data);\n     \n     const productExists = updatedCart.find(product => product.id === productId);\n\n     const currentAmount = productExists ? productExists.amount : 0;\n\n     const {amount: stockAmount} = await api.get(`stock/${productId}`)\n     .then(response => response.data);\n\n     if(currentAmount + 1 > stockAmount) {\n      toast.error('Quantidade solicitada fora de estoque');\n      return;\n     }\n\n     if(productExists) {\n      productExists.amount += 1;\n     } else {\n       const newProduct = {\n         ...product,\n         amount: 1\n       }\n       updatedCart.push(newProduct);\n     }\n\n     setCart(updatedCart);\n     localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\n    } catch {\n      toast.error('Erro na adição do produto');\n    }\n  };\n\n  const removeProduct = (productId: number) => {\n    try {\n      const updatedCart = [...cart];\n      const productIndex = updatedCart.findIndex(product => product.id === productId);\n\n      /* updatedCart.forEach((product, index) => {\n        if (product.id === productId ) {\n          updatedCart.splice(index, 1)\n        } else {\n          throw Error()\n        }\n      }) */\n      /* Jeito que eu fiz, funcionou mas não tava passando nos testes kkk */\n\n      if(productIndex >= 0) {\n        updatedCart.splice(productIndex, 1);\n      } else {\n        throw Error();\n      }\n\n      setCart(updatedCart);\n      localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\n    } catch {\n      toast.error('Erro na remoção do produto');\n    }\n  };\n\n  const updateProductAmount = async ({\n    productId,\n    amount,\n  }: UpdateProductAmount) => {\n    try {\n      if(amount <= 0) return;\n\n      const {amount: stockAmount} = await api.get(`stock/${productId}`)\n     .then(response => response.data);\n\n     if(amount > stockAmount) {\n      toast.error('Quantidade solicitada fora de estoque');\n      return;\n     }\n\n      const updatedCart = cart.map(product => {\n        if(product.id === productId) {\n          const newProduct = {\n            ...product,\n            amount,\n          }\n          return newProduct;\n        }\n        return product;\n      })\n\n       setCart(updatedCart);\n       localStorage.setItem('@RocketShoes:cart', JSON.stringify(updatedCart));\n    } catch {\n      toast.error('Erro na alteração de quantidade do produto');\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addProduct, removeProduct, updateProductAmount }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart(): CartContextData {\n  const context = useContext(CartContext);\n\n  return context;\n}\n","import React, { useState, useEffect } from 'react';\nimport { MdAddShoppingCart } from 'react-icons/md';\n\nimport { ProductList } from './styles';\nimport { api } from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport { useCart } from '../../hooks/useCart';\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n}\n\ninterface ProductFormatted extends Product {\n  priceFormatted: string;\n}\n\ninterface CartItemsAmount {\n  [key: number]: number;\n}\n\nconst Home = (): JSX.Element => {\n  const [products, setProducts] = useState<ProductFormatted[]>([]);\n  const { addProduct, cart } = useCart();\n\n  const cartItemsAmount = cart.reduce((sumAmount, product) => {\n    sumAmount = {\n      ...sumAmount,\n      [product.id]: product.amount\n    }\n    return sumAmount\n  }, {} as CartItemsAmount)\n\n  useEffect(() => {\n    async function loadProducts() {\n      api.get('products').then(response => setProducts(response.data))\n    }\n\n    loadProducts();\n  }, []);\n\n  function handleAddProduct(id: number) {\n    addProduct(id);\n  }\n\n  return (\n    <ProductList>\n      {\n        products.map(product => (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>\n            {formatPrice(product.price)}\n            </span>\n            <button\n          type=\"button\"\n          data-testid=\"add-product-button\"\n          onClick={() => handleAddProduct(product.id)}\n            >\n              <div data-testid=\"cart-product-quantity\">\n            <MdAddShoppingCart size={16} color=\"#FFF\" />\n            {cartItemsAmount[product.id] || 0}\n              </div>\n\n              <span>ADICIONAR AO CARRINHO</span>\n            </button>\n          </li>\n        ))\n      }\n    </ProductList>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { darken, lighten } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.06, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n\n    svg {\n      color: #7159c1;\n      transition: color 0.2s;\n    }\n\n    &:hover {\n      svg {\n        color: ${darken(0.06, '#7159c1')};\n      }\n    }\n\n    &:disabled {\n      svg {\n        color: ${lighten(0.25, '#7159c1')};\n        cursor: not-allowed;\n      }\n    }\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n","import React from 'react';\nimport {\n  MdAddCircleOutline, MdDelete,\n\n  MdRemoveCircleOutline\n} from 'react-icons/md';\nimport { useCart } from '../../hooks/useCart';\nimport { formatPrice } from '../../util/format';\n// import { useCart } from '../../hooks/useCart';\n// import { formatPrice } from '../../util/format';\nimport { Container, ProductTable, Total } from './styles';\n\n\ninterface Product {\n  id: number;\n  title: string;\n  price: number;\n  image: string;\n  amount: number;\n}\n\nconst Cart = (): JSX.Element => {\n  const { cart, removeProduct, updateProductAmount } = useCart();\n\n  const cartFormatted = cart.map(product => ({\n     ...product,\n     priceFormatted: formatPrice(product.price),\n     subTotal: formatPrice(product.price * product.amount)\n   }))\n   \n  const total = cart.reduce((acc, currProduct) =>\n    acc + (currProduct.price * currProduct.amount), 0)\n\n  function handleProductIncrement(product: Product) {\n    console.log(product);\n    const increment = {\n      productId: product.id,\n      amount: product.amount + 1\n    }\n    updateProductAmount(increment);\n  }\n\n  function handleProductDecrement(product: Product) {\n    const decrement = {\n      productId: product.id,\n      amount: product.amount - 1\n    }\n    updateProductAmount(decrement);\n  }\n\n  function handleRemoveProduct(productId: number) {\n    removeProduct(productId);\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th aria-label=\"product image\" />\n            <th>PRODUTO</th>\n            <th>QTD</th>\n            <th>SUBTOTAL</th>\n            <th aria-label=\"delete icon\" />\n          </tr>\n        </thead>\n        <tbody>\n          {cartFormatted.map(product => (\n            <tr data-testid=\"product\" key={product.id}>\n            <td>\n              <img src={product.image} alt={product.title} />\n            </td>\n            <td>\n              <strong>{product.title}</strong>\n              <span>{product.priceFormatted}</span>\n            </td>\n            <td>\n              <div>\n                <button\n                  type=\"button\"\n                  data-testid=\"decrement-product\"\n                  disabled={product.amount <= 1}\n                  onClick={() => handleProductDecrement(product)}\n                >\n                  <MdRemoveCircleOutline size={20} />\n                </button>\n                <input\n                  type=\"text\"\n                  data-testid=\"product-amount\"\n                  readOnly\n                  value={product.amount}\n                />\n                <button\n                  type=\"button\"\n                  data-testid=\"increment-product\"\n                  onClick={() => handleProductIncrement(product)}\n                >\n                  <MdAddCircleOutline size={20} />\n                </button>\n              </div>\n            </td>\n            <td>\n              <strong>{product.subTotal}</strong>\n            </td>\n            <td>\n              <button\n                type=\"button\"\n                data-testid=\"remove-product\"\n                onClick={() => handleRemoveProduct(product.id)}\n              >\n                <MdDelete size={20} />\n              </button>\n            </td>\n          </tr>\n          ))}\n        </tbody>\n      </ProductTable>\n\n      <footer>\n        <button type=\"button\">Finalizar pedido</button>\n\n        <Total>\n          <span>TOTAL</span>\n          <strong>{formatPrice(total)}</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n};\n\nexport default Cart;\n","import { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nconst Routes = (): JSX.Element => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/cart\" component={Cart} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/background.d1721c83.svg\";","import { createGlobalStyle } from 'styled-components';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 14px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.eb50c339.svg\";","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n\n  a {\n    transition: opacity 0.2s;\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { MdShoppingBasket } from 'react-icons/md';\n\nimport logo from '../../assets/images/logo.svg';\nimport { Container, Cart } from './styles';\nimport { useCart } from '../../hooks/useCart';\n\nconst Header = (): JSX.Element => {\n  const { cart } = useCart();\n  const cartSize = cart.length;\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logo} alt=\"Rocketshoes\" />\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>Meu carrinho</strong>\n          <span data-testid=\"cart-size\">\n            {cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}\n          </span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#FFF\" />\n      </Cart>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\nimport Header from './components/Header';\nimport { CartProvider } from './hooks/useCart';\n\nconst App = (): JSX.Element => {\n  return (\n    <BrowserRouter>\n      <CartProvider>\n        <GlobalStyles />\n        <Header />\n        <Routes />\n        <ToastContainer autoClose={3000} />\n      </CartProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}